#:kivy 1.8.0

#:import basename os.path.basename
#:import dirname os.path.dirname
#:import relpath os.path.relpath

#:import screenmanager kivy.uix.screenmanager

#:import p parameters

<FileTab@TabbedPanelItem>:
    background_down: ''
    background_normal: p.kgui_dir+'/Logos/Black.png'
    background_color: p.background
    canvas:
        Rectangle:
            source: p.kgui_dir+'/Logos/FilesIcon.png'
            size: 100,100
            pos: 250, 0
    FloatLayout:
        pos: 0, p.tab_height
        canvas.before:
            Color:
                rgba: p.background
            Rectangle:
                size: p.screen_width, p.screen_height - p.tab_height - p.status_bar_height
                pos: 0, p.tab_height
        TitleBar:
            id: title_bar
            enabled: False if (screen_man.current == 'FileScreen' and gc.path == p.sdcard_path) else True
            on_release:
                if screen_man.current == 'FileScreen': gc.back()
                else: screen_man.current = 'FileScreen'
            pos_hint: {'x':0, 'top':1}
            title: relpath(gc.path, dirname(p.sdcard_path)) if screen_man.current == 'FileScreen' else "Queued Prinjobs"
        ScreenManager:
            id: screen_man
            name: 'FileScreenManager'
            transition: screenmanager.NoTransition()
            Screen:
                id: file_screen
                name: 'FileScreen'
                GC:
                    id: gc
                    viewclass: 'GCItem'
                    size_hint: None, None
                    size: p.screen_width, p.screen_height - title_bar.height - p.tab_height - p.status_bar_height
                    pos: 0, p.tab_height
                Btn_Queue:
                    right: p.screen_width - p.h_padding
                    y: p.tab_height + p.padding
                    on_release: screen_man.current = 'QueueScreen'
            Screen:
                id: queue_screen
                name: 'QueueScreen'
                FC:
                    id: fc
                    viewclass: 'FCItem'
                    size_hint: None, None
                    size: p.screen_width, p.screen_height - title_bar.height - p.tab_height - p.status_bar_height
                    pos: 0, p.tab_height
                Btn_QX:
                    id: q_x
                    right: p.screen_width - p.h_padding +10
                    y: p.tab_height + p.padding 
                    on_release: fc.remove()
                    enabled: len(fc.ids.fc_box.selected_nodes)    
                Btn_QUp:
                    id: q_up
                    right: q_x.x - p.h_padding  +10
                    y: p.tab_height + p.padding
                    on_release: fc.move_up()
                    enabled: len(fc.ids.fc_box.selected_nodes) and fc.ids.fc_box.selected_nodes[0] != 0
                Btn_QDown:
                    right: q_up.x - p.h_padding  + 10
                    y: p.tab_height + p.padding
                    on_release: fc.move_down()
                    enabled: len(fc.ids.fc_box.selected_nodes) and fc.ids.fc_box.selected_nodes[0] != 0

<FC>:
    FCBox:
        id: fc_box
        default_size: dp(150), dp(110)
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'
        multiselect: False
        touch_multiselect: False

<FCItem>:
    size: p.screen_width, 777
    canvas:
        Color:
            rgba: p.translucent_white if (self.selected or self.pressed) else (0,0,0,0)
        Rectangle:
            size: self.size
            pos: self.pos
        Color:
            rgba: p.divider
        Rectangle:
            size: p.screen_width - 2 * p.small_padding, 1
            pos: p.small_padding, self.top - 1
    #Label
    text: root.details
    halign: 'right'
    valign: 'middle'
    max_lines: 1
    padding_x: p.h_padding
    padding_y: 20
    text_size: self.size
    font_size: p.normal_font
    color: p.medium_light_gray
    Label:
        text: root.name
        shorten: True
        halign: 'left'
        valign: 'middle'
        max_lines: 1
        padding_x: p.h_padding
        padding_y: 20
        size: root.size
        pos: root.pos
        text_size: self.size
        font_size: p.normal_font
        color: (1,1,1,1)
    
<GC>:
    GCGrid:
        id: gc_grid
        cols: 3
        padding: (15,)
        spacing:(15,)
        default_size: dp(180), dp(180)
        # default_size_hint: 1, None
        size_hint_y: None
        size_hint_x: None
        width: p.screen_width
        height: self.minimum_height
        orientation: 'vertical'
        multiselect: False
        touch_multiselect: False

<GCItem>:
    canvas:
        Color:
            rgba: p.medium_gray
        Rectangle:
            source: p.kgui_dir + ('/Logos/File.png' if self.item_type == 'file' else '/Logos/Usb.png' if self.item_type == 'usb' else '/Logos/Folder.png' )
            size: 84, 84
            pos: self.center_x - 42, self.center_y - 5
        Color:
            rgba: p.translucent_white if self.pressed else (0,0,0,0)
        RoundedRectangle:
            radius: (p.radius,)
            size: self.size
            pos: self.pos
    #Label
    text: root.details
    halign: 'center'
    valign: 'bottom'
    max_lines: 1
    padding_x: 0
    padding_y: 6
    text_size: self.size
    font_size: p.normal_font - 3
    color: p.medium_light_gray
    Label:
        text: root.name
        shorten: False
        multiline: True
        halign: 'center'
        valign: 'top'
        max_lines: 2
        padding_x: 0
        padding_y: 0
        size: root.width, 80
        pos: root.pos
        text_size: self.size
        font_size: p.normal_font - 3
        color: (1,1,1,1)
 
<TitleBar@BaseButton>:
    size: 140, 110
    enabled: False
    title: ""
    #: set q 26
    canvas.before:
        Color:
            rgba: p.background
        Rectangle:
            size: p.screen_width, self.height
            pos: self.pos
        Color:
            rgba: (1,1,1,1) if self.enabled else (0,0,0,0)
        Triangle:
            points: p.h_padding, self.center_y,   p.h_padding + q, self.center_y-q,   p.h_padding + q, self.center_y+q
        Color:
            rgba: p.translucent_white if self.pressed else (0,0,0,0)
        Rectangle:
            size: self.size
            pos: self.pos
    Label:
        text: root.title
        shorten: True
        shorten_from: 'left'
        halign: 'center'
        valign: 'middle'
        max_lines: 1
        size_hint: None, None
        size: p.screen_width - 200, root.height
        center_x: p.screen_width/2
        y: root.y
        text_size: self.size
        font_size: p.large_font
        color: (1,1,1,1)


# BUTTONS

<Btn_Queue@FloatingButton>:
    size: 86 * p.disp_vertical_stretch, 86
    btn_color: p.accent
    enabled: True
    Label:
        size: root.size
        pos: root.pos
        text: "Queue"
        bold: True
        halign: 'center'
        valign: 'middle'
        text_size: self.size
        font_size: p.normal_font
        color: (1,1,1,1)

#:set pad 24
<Btn_QUp@FloatingButton>:
    id: q_up
    btn_color: p.accent
    canvas:
        Color:
            rgba: (1, 1, 1, 1) if self.enabled else (0,0,0,0)
        Triangle:
            points: self.x+pad-4, self.y+pad+4,  self.right-pad+4, self.y+pad+4,  self.center_x, self.top-pad

<Btn_QDown@FloatingButton>:
    btn_color: p.accent
    canvas:
        Color:
            rgba: (1, 1, 1, 1) if self.enabled else (0,0,0,0)
        Triangle:
            points: self.x+pad-4, self.top-pad-4,  self.right-pad+4, self.top-pad-4,  self.center_x, self.y+pad

<Btn_QX@FloatingButton>:
    btn_color: p.accent
    canvas:
        Color:
            rgba: (1,1,1,1) if self.enabled else (0,0,0,0)
        Line:
            points: self.x+pad, self.top-pad,  self.right-pad, self.y+pad
            width: 5
            cap: 'none'
        Line:
            points: self.x+pad, self.y+pad,  self.right-pad, self.top-pad
            width: 5
            cap: 'none'
                   

# POPUPS

<PrintPopup>:
    title: 'Print'
    title_size: p.large_font
    size_hint: 0.8, 0.3
    FloatLayout:
        Label:
            text: basename(root.path)
            halign: 'center'
            valign: 'middle'
            max_lines: 2
            size_hint: 0.9, 0.5
            pos_hint: {'center_x': 0.5, 'center_y': 0.5+0.2}
            text_size: self.size
            font_size: p.large_font
            color: p.light_gray
        Btn_P_Cancel:
            id: btn_cancel
            width: root.width/3
            pos: root.pos
            on_release: root.dismiss()
        RectangleButton:
            id: btn_del
            canvas:
                Color:
                    rgba: p.divider
                Line:
                    points: self.x, self.y, self.x, self.top, self.right, self.top
            text: 'Delete'
            size: root.width/3, 70
            pos: btn_cancel.right, root.y
            on_release: root.delete()
        Btn_P_Confirm:
            text: 'Print'
            enabled: app.printer_objects_available
            width: root.width/3
            pos: btn_del.right, root.y
            on_release: root.confirm()

<StopPopup>:
    title: 'Stop'
    title_size: p.large_font
    size_hint: 0.8, 0.3
    FloatLayout:
        Label:
            text: basename(root.path)
            halign: 'center'
            valign: 'middle'
            max_lines: 2
            size_hint: 0.9, 0.5
            pos_hint: {'center_x': 0.5, 'center_y': 0.5+0.2}
            text_size: self.size
            font_size: p.large_font
            color: p.light_gray
        Btn_P_Cancel:
            width: root.width/2
            pos: root.pos
            on_release: root.dismiss()
        Btn_P_Confirm:
            enabled: True
            width: root.width/2
            pos: root.center_x, root.y
            on_release: root.dismiss(); app.send_stop()

<DelPopup>:
    title: 'Delete'
    title_size: p.large_font
    size_hint: 0.8, 0.3
    FloatLayout:
        Label:
            text: basename(root.path)
            halign: 'center'
            valign: 'middle'
            max_lines: 2
            size_hint: 0.9, 0.5
            pos_hint: {'center_x': 0.5, 'center_y': 0.5+0.2}
            text_size: self.size
            font_size: p.large_font
            color: p.light_gray
        Btn_P_Cancel:
            width: root.width/2
            pos: root.pos
            on_release: root.dismiss()
        Btn_P_Confirm:
            text: 'Delete'
            width: root.width/2
            enabled: True
            pos: root.center_x, root.y
            on_release: root.confirm()
