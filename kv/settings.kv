#:kivy 1.8.0

#:import platform platform
#:import Factory kivy.factory.Factory
#:import screenmanager kivy.uix.screenmanager
#:import p parameters

<SettingTab>:
    background_down: '' 
    background_color: p.background
    canvas:
        Rectangle:
            source: p.kgui_dir+'/logos/settings.png'
            size: 60 * p.disp_vertical_stretch, 60
            pos: 525 - 30 * p.disp_vertical_stretch, 20
    BoxLayout:
        orientation: 'vertical'
        TitleBar:
            title: {'SettingScreen': "Settings", 'ConsoleScreen':"Gcode Console", 'WifiScreen': "Wifi", 'UpdateScreen': "System Update", 'FlashScreen': "Flash Klipper Firmware"}[screen_man.current]
            enabled: screen_man.current != 'SettingScreen'
            on_release: screen_man.current = 'SettingScreen'
            pos_hint: {'x':0, 'top':1}
        ScreenManager:
            id: screen_man
            name: 'SettingScreenManager'
            transition: screenmanager.NoTransition()
            SettingScreen:
                id: setting_screen
            ConsoleScreen:
                id: console_screen
            WifiScreen:
                id: wifi_screen
            UpdateScreen:
                id: update_screen
            FlashScreen:
                id: flash_screen

<SettingScreen@Screen>:
    name: 'SettingScreen'
    ScrollView:
        canvas.before:
            Color:
                rgba: p.background
            Rectangle:
                pos: self.pos
                size: self.size
        BoxLayout:
            orientation:'vertical'
            height: self.minimum_height
            pos: 0, root.height - self.height
            size_hint_y: None
            Divider:
                pos_hint: {'center_x':0.5}
            SetItem:
                left_title: "Gcode Console"
                on_release: root.manager.current = "ConsoleScreen"
            SetItem:
                left_title: "Max. printhead Acceleration"
                right_title: "{:6.0f}mm/sÂ²".format(app.config_acceleration)
                on_release: Factory.AccConfPopup(val=app.config_acceleration).open()
            SetItem:
                left_title: "Pressure Advance"
                right_title: "{:4.3f}s".format(app.config_pressure_advance)
                on_release: Factory.PressureAdvanceConfPopup(val=app.config_pressure_advance).open()
            SIWifi:
                left_title: "Wifi"
                enabled: self.network_manager.available
                on_release: root.manager.current = "WifiScreen"
            SITimezone:
                id: si_timezone
            SetItem:
                left_title: "Shutdown..."
                on_release: Factory.PowerPopup().open()
            SIUpdate:
                left_title: "Update"
                on_release: root.manager.current = "UpdateScreen"
            SetItem:
                left_title: "Flash Klipper Firmware to Printer"
                on_release: root.manager.current = "FlashScreen"
            SetItem:
                left_title: "Change Hostname"
                right_title: platform.node()
                on_release: Factory.HostnamePopup().open()

<ConsoleScreen>:
    name: 'ConsoleScreen'
    canvas.before:
        Color:
            rgba: p.background
        Rectangle:
            pos: 0,0 # screens are relative layouts
            size: self.size
    ScrollView:
        id: console_scroll
        pos: 0, console_input.top
        size_hint: 1, None
        height: root.height - console_input.top
        Label:
            id: console_label
            text: "Test text from kv\nll"
            font_size: p.normal_font
            size: self.texture_size
            size_hint: 1, None
            valign: 'bottom'
            halign: 'left'
            padding_x: p.padding
            padding_y: p.padding - 10
            pos_hint: {'x':0, 'y':0}
            color: p.medium_light_gray
    TextInput:
        id: console_input
        multiline: False
        text_validate_unfocus: False
        font_size: p.normal_font
        foreground_color: (1,1,1,1)
        padding: (15,12,25,12)
        height: self.minimum_height
        background_color: p.medium_gray
        cursor_color: (1,1,1,1)
        size_hint: None, None
        width: root.width - 2*p.padding
        pos_hint: {'center_x': 0.5}
        y: (0.34-0.02)*p.screen_height - p.tab_height + p.padding # Keyboard height is 0.34 (style.kv)

<WifiScreen>:
    name: 'WifiScreen'
    canvas.before:
        Color:
            rgba: p.background
        Rectangle:
            pos: 0,0 # screens are relative layouts
            size: self.size
    Wifi:
        id: wifi
        viewclass: 'WifiItem'
    Label:
        id: wifi_message
        text: wifi.message
        font_size: p.normal_font
        text_size: self.size
        size_hint: 1, 0.2
        valign: 'top'
        halign: 'left'
        padding_x: p.padding
        padding_y: p.padding - 10
        pos_hint: {'x':0, 'top':1}
        color: p.medium_light_gray

<Wifi>:
    message: ""
    WifiBox:
        id: wifi_box
        default_size: None, None
        default_size_hint: 1, None
        size_hint_y: None
        width: p.screen_width
        height: self.minimum_height
        orientation: 'vertical'
        multiselect: False
        touch_multiselect: False

<WifiItem>:
    canvas:
        Color:
            rgba: p.translucent_white if self.pressed or (self.ap and self.ap.in_use) else (0,0,0,0)
        Rectangle:
            size: self.size
            pos: self.pos
    #Label
    width: p.screen_width
    size_hint_y: None
    height: 110
    text: "" if not root.ap else self.ap.ssid
    halign: 'right'
    valign: 'middle'
    max_lines: 1
    padding_x: p.h_padding
    text_size: self.size
    font_size: p.normal_font
    color: p.light_gray
    Label:
        text: "" if not root.ap else str(root.ap.signal)
        shorten: True
        halign: 'left'
        valign: 'middle'
        padding_x: p.h_padding 
        size_hint: None, None
        size: root.size
        pos: root.pos
        text_size: self.size
        font_size: p.normal_font
        color: p.medium_light_gray if not (root.ap and root.ap.saved) else (1,1,1,1)
    Divider:
        y: root.y

<UpdateScreen>:
    name: 'UpdateScreen'
    canvas.before:
        Color:
            rgba: p.background
        Rectangle:
            pos: 0, 0
            size: self.size
    Divider:
        pos_hint: {'center_x':0.5, 'top':1}
    #Label:
    #    id: message
    #    text: ""
    #    font_size: p.normal_font
    #    text_size: self.size
    #    size_hint: 1, 0.1
    #    valign: 'top'
    #    halign: 'left'
    #    padding_x: p.padding
    #    padding_y: p.padding - 10
    #    pos_hint: {'x':0, 'top':1}
    #    color: p.medium_light_gray
    ScrollView:
        size_hint: 1, 1
        pos_hint: {'x':0, 'y':0}
        do_scroll_x: False
        BoxLayout:
            id: box
            orientation: 'vertical'
            height: self.minimum_height
            size_hint_y: None
    FloatingButton:
        id: btn_update
        btn_color: p.medium_gray
        y: p.padding
        right: root.right - p.padding
        size: 85*p.disp_vertical_stretch, 85
        text: "Update"
        on_release: root.fetch()

<FlashScreen>:
    name: 'FlashScreen'
    canvas.before:
        Color:
            rgba: p.background
        Rectangle:
            pos: 0,0
            size: self.size
    ScrollView:
        size_hint: 1, 1
        pos_hint: {'x':0, 'y':0}
        do_scroll_x: False
        BoxLayout:
            id: box
            orientation: 'vertical'
            height: self.minimum_height
            padding: (0, 0, 0, 300)  #add some blank space so keyboard or FloatingButton cant block items
            size_hint_y: None
    FloatingButton:
        id: btn_flash
        btn_color: p.red
        y: p.padding
        right: root.right - p.padding
        size: 85*p.disp_vertical_stretch, 85
        text: "Flash\nMCU"

<BtnRadio@BaseButton>:
    selected: True
    size_hint: None, None
    size: 36, 35
    canvas:
        Color:
            rgba: p.btn_outline
        Line:
            width: 1
            ellipse: self.x, self.y,     self.width, self.height
        Color:
            rgba: p.medium_light_gray if self.selected else (0,0,0,0)
        Ellipse:
            pos: self.x + 6, self.y + 6
            size: self.width - 12, self.height - 12

<BtnTristate@BaseButton>:
    state: 2 # 0=False, 1=True, 2=M (if available)
    states: 3
    size_hint: None, None
    size: 36, 35
    canvas.before:
        Color:
            rgba: p.btn_outline
        Line:
            width: 1
            rounded_rectangle: (self.x, self.y, self.width, self.height, p.icon_radius)
        Color:
            rgba: p.medium_light_gray if self.state else (0,0,0,0)
        RoundedRectangle:
            radius: (p.icon_radius/2,)
            pos: self.x + 5, self.y + 5
            size: self.width - 10, self.height - 10
        Color:
            rgba: (0,0,0,0.3) if self.state == 1 else (0,0,0,0)
        Line:
            width: 2
            points: self.center_x -9, self.center_y,     self.center_x-2.5, self.center_y -7,     self.center_x + 9, self.center_y + 6
    Label:
        text: "M" if root.state == 2 else ""
        bold: True
        font_size: p.normal_font
        color: (0,0,0,0.3)
        size: root.size
        pos: root.pos
        text_size: self.size
        valign: 'middle'
        halign: 'center'

<CITristate>:
    size: p.screen_width, 80
    size_hint: None, None
    state: 0
    states: 2
    indent: 0
    text: "Tristate"
    font_size: p.normal_font
    text_size: self.size
    valign: 'middle'
    halign: 'left'
    padding_x: p.padding
    BtnTristate:
        states: root.states
        state: root.state
        right: root.right - p.padding
        center_y: root.center_y
        on_release: root.on_release()

<CIRadio>:
    selected: False
    size: p.screen_width, 80
    size_hint: None, None
    indent: 0
    text: "Radio"
    font_size: p.normal_font
    text_size: self.size
    valign: 'middle'
    halign: 'left'
    padding_x: p.padding
    BtnRadio:
        selected: root.selected
        right: root.right - p.padding
        center_y: root.center_y
        on_release: root.on_release()

<CIValue>:
    size_hint: None, None
    size: p.screen_width, 80
    indent: 0
    text: "Value"
    font_size: p.normal_font
    text_size: self.size
    valign: 'middle'
    halign: 'right'
    padding_x: p.padding
    TextInput:
        text: root.value
        id: text_input
        multiline: False
        size_hint: None, None
        font_size: p.normal_font
        foreground_color: p.light_gray if root.locked else (1,1,1,1)
        height: p.normal_font + 15
        valign: 'middle'
        width: 150
        background_color: p.medium_gray
        cursor_color: (1,1,1,1)
        x: p.padding
        center_y: root.center_y

<CIText>:
    size_hint: None, None
    indent: 0
    text: "Text"
    font_size: p.normal_font
    text_size: p.screen_width, None
    size: self.texture_size
    line_height: 1.25
    valign: 'middle'
    color: p.medium_light_gray
    halign: 'left'
    padding_x: p.padding * (self.indent + 1)
    padding_y: p.padding - p.small_padding

# SETITEMS

<SetItem>:
    size_hint_y: None
    height: 110
    width: p.screen_width
    # Button Label
    text: self.left_title
    font_size: p.normal_font
    text_size: self.size
    valign: 'middle'
    halign: 'left'
    pos: self.pos
    padding_x: p.padding
    Label:
        id: right_label
        text: root.right_title
        font_size: p.normal_font
        text_size: self.size
        color: p.medium_light_gray
        size: 350, root.height
        size_hint: None, None
        valign: 'middle'
        halign: 'right'
        y: root.y
        right: p.screen_width
        padding_x: p.padding
    Divider:
        y: root.y

<SISwitch@SetItem>:
    enabled: False
    Switch:
        id: knopf
        size_hint: None, None
        pos_hint: {'center_y': 0.5}
        right: p.screen_width-p.padding +p.small_padding #to increase touch area

<SITimezone>:
    left_title: "Timezone"
    on_release: Factory.TimezonePopup().open()

<SIRelease>:
    # Highlight the currently installed version
    canvas:
        Color:
            rgba: p.translucent_white if self.release.current else (0, 0, 0, 0)
        Rectangle:
            size: self.size
            pos: self.pos


# POPUPS

<PasswordPopup>:
    txt_input: pwd_input
    size_hint: 0.87, 0.32
    FloatLayout:
        Label:
            text: 'Password'
            font_size: p.normal_font
            color: p.light_gray
            size: self.texture_size
            size_hint: None, None
            pos_hint: {'x': 0.07, 'y': 0.77}
        TextInput:
            id: pwd_input
            multiline: False
            password: True
            font_size: p.normal_font
            foreground_color: (1,1,1,1)
            padding: (15,12,25,12)
            height: self.minimum_height
            background_color: p.medium_gray
            cursor_color: (1,1,1,1)
            size_hint: 0.72, None
            pos_hint: {'x': 0.07, 'center_y': 0.63}
        BaseButton:
            on_press:
                pwd_input.password = not pwd_input.password
                lb_show.text = "show" if pwd_input.password else "hide"
            on_release:
                pwd_input.focus = True
            id: btn_s
            height: pwd_input.height-1
            size_hint: 0.11, None
            pos_hint: {'right': 0.93, 'center_y': 0.63}
            Label:
                id: lb_show
                size: btn_s.size
                pos: btn_s.pos
                text_size: self.size
                text: "show"
                font_size: p.normal_font
                halign: 'center'
                valign: 'middle'
                color: p.light_gray
        BtnPCancel:
            width: root.width/2
            pos: root.pos
            on_release: root.dismiss()
        BtnPConfirm:
            enabled: len(pwd_input.text) >= 8
            width: root.width/2
            pos: root.center_x, root.y
            on_release: root.confirm()

<ConnectionPopup>:
    title: self.ap.ssid
    size_hint: 0.67, 0.38
    FloatLayout:
        Divider:
            size_hint: None, None
            size: btn_toggle_connect.width, 1
            pos: btn_toggle_connect.x, btn_toggle_connect.top
        RectangleButton:
            id: btn_toggle_connect
            text: 'Disconnect' if root.ap.in_use else 'Connect'
            size: btn_cancel.size
            pos: root.x, btn_delete.top
            on_release: root.toggle_connected()
        Divider:
            size_hint: None, None
            size: btn_toggle_connect.width, 1
            pos: btn_toggle_connect.pos
        RectangleButton:
            id: btn_delete
            text: 'Delete Connection'
            size: btn_cancel.size
            pos: root.x, btn_cancel.top
            on_release: root.delete()
        BtnPCancel:
            id: btn_cancel
            single: True
            width: root.width
            pos: root.pos
            on_release: root.dismiss()

<PowerPopup@BasePopup>:
    title: "Shutdown..."
    title_size: p.large_font
    size_hint: 0.67, 0.5
    FloatLayout:
        Divider:
            width: root.width
            pos: btn_quit.x, btn_quit.top
        RectangleButton:
            id: btn_restart_klipper
            text: "Restart Klipper"
            size: btn_poweroff.size
            pos: btn_poweroff.x, btn_reboot.top
            on_release: app.firmware_restart()
        Divider:
            width: root.width
            pos: btn_reboot.pos
        RectangleButton:
            id: btn_quit
            text: "Quit to Terminal"
            size: btn_poweroff.size
            pos: btn_poweroff.x, btn_restart_klipper.top
            on_release: app.quit()
        Divider:
            width: root.width
            pos: btn_quit.pos
        RectangleButton:
            id: btn_reboot
            text: "Reboot"
            size: btn_poweroff.size
            pos: btn_poweroff.x, btn_poweroff.top
            on_release: app.reboot()
        Divider:
            width: root.width
            pos: btn_restart_klipper.pos
        RectangleButton:
            id: btn_poweroff
            text: "Shutdown"
            size_hint: 1, None
            height: btn_cancel.height
            pos: root.x, btn_cancel.top
            on_release: app.poweroff()
        BtnPCancel:
            id: btn_cancel
            single: True
            width: root.width
            pos: root.pos
            on_release: root.dismiss()

<TimezonePopup>:
    size_hint: 0.94, 0.7
    title: "Choose Region"
    FloatLayout:
        id: maincontainer
        TimezoneRV:
            id: rv
            viewclass: 'TimezoneRVItem'
            size_hint: None, None
            size: root.width, maincontainer.height-btn_cancel.height
            pos: root.x, btn_cancel.top
            TimezoneRVBox:
                id: rv_box
                default_size: None, dp(70)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'
                multiselect: False
                touch_multiselect: False
        BtnPCancel:
            id: btn_cancel
            width: root.width/2
            pos: root.pos
            on_release: root.dismiss()
        BtnPConfirm:
            enabled: bool(rv_box.selected_nodes)
            id: btn_confirm
            title: "Confirm"
            width: root.width/2
            pos: root.center_x, root.y
            on_release: root.confirm()

<TimezoneRVItem>:
    # Draw a background to indicate selection
    canvas:
        Color:
            rgba: p.translucent_white if self.selected else (0,0,0,0)
        Rectangle:
            size: self.size
            pos: self.pos
    size_hint: None, None
    padding_x: p.h_padding
    font_size: p.normal_font
    text_size: self.size
    color: (1,1,1,1)
    valign: 'middle'
    halign: 'left'

<AccConfPopup@BasePopup>:
    title: "Configure Acceleration"
    size_hint: 0.94, 0.4
    FloatLayout:
        UltraSlider:
            val: root.val
            val_min: 2000
            val_max: 50000
            unit: "mm/sÂ²"
            round_to: -2
            buttons: [[36000,0,"default",None],]
            id: slider
            pos_hint: {'center_x':0.5, 'y':0.6}
        BtnPCancel:
            id: btn_cancel
            width: root.width/2
            pos: root.pos
            on_release: root.dismiss()
        BtnPConfirm:
            text: "Set and restart"
            enabled: slider.changed
            width: root.width/2
            pos: root.center_x, root.y
            on_release: app.write_config('printer', 'max_accel', slider.val), root.dismiss()

<PressureAdvanceConfPopup@BasePopup>:
    size_hint: 0.94, 0.4
    title: "Configure Pressure Advance"
    FloatLayout:
        UltraSlider:
            val: root.val
            buttons: []
            val_min: 0
            val_max: 0.05
            unit: "mm/mm/s"
            round_to: 3
            id: slider
            pos_hint: {'center_x':0.5, 'y':0.6}
        BtnPCancel:
            id: btn_cancel
            width: root.width/2
            pos: root.pos
            on_release: root.dismiss()
        BtnPConfirm:
            text: "Set and restart"
            enabled: slider.changed
            width: root.width/2
            pos: root.center_x, root.y
            on_release: app.write_pressure_advance(slider.val), root.dismiss()

<ReleasePopup>:
    size_hint: 0.94, 0.4
    title: "Install"
    FloatLayout:
        id: f_layout
        Label:
            text: root.release.version + "\n" +  root.release.date
            halign: 'center'
            valign: 'middle'
            size_hint: 0.8, None
            pos_hint: {'center_x': 0.5, 'center_y': 0.8}
            text_size: self.size
            font_size: p.large_font
            color: p.light_gray
        BtnPCancel:
            id: btn_cancel
            width: root.width/2
            pos: root.pos
            on_release: root.dismiss()
        BtnPConfirm:
            id: btn_update
            text:
                ('Update' if root.release.newer else
                'Reinstall' if root.release.current else
                'Downgrade')
            enabled: True
            width: root.width/2
            pos: btn_cancel.right, root.y
            on_release: root.install()

<InstallPopup>:
    size_hint: 0.94, 0.68
    title: "Install"
    auto_dismiss: False
    FloatLayout:
        id: content
        ScrollView:
            id: output_scroll
            size_hint: 1, None
            pos_hint: {'x': 0}
            y: btn_abort.top
            height: content.height - btn_abort.height
            do_scroll_x: False
            Label:
                id: output_label
                markup: True
                halign: 'left'
                valign: 'top'
                padding: p.small_padding, p.small_padding
                text_size: output_scroll.width, None
                size_hint_y: None
                width: output_scroll.width
                pos: output_scroll.pos
                height: self.texture_size[1]
                font_size: p.small_font
                color: p.light_gray
        BtnPCancel:
            id: btn_abort
            text: "Abort"
            width: root.width
            pos: root.pos
            on_release: root.terminate()
        BtnPCancel:
            id: btn_cancel
            text: "Reboot later"
            width: root.width/2
            pos: root.x, p.mars
            on_release: root.dismiss()
        BtnPConfirm:
            id: btn_reboot
            enabled: True
            text: "Reboot now"
            width: root.width/2
            pos: btn_cancel.right, p.mars
            on_release: app.reboot()

<HostnamePopup>:
    txt_input: hostname_input
    size_hint: 0.87, 0.32
    title: "Change Hostname"
    FloatLayout:
        HostnameTextInput:
            id: hostname_input
            multiline: False
            font_size: p.normal_font
            foreground_color: (1,1,1,1)
            padding: (15,12,25,12)
            height: self.minimum_height
            background_color: p.medium_gray
            cursor_color: (1,1,1,1)
            size_hint: 0.8, None
            pos_hint: {'center_x': 0.5, 'center_y': 0.63}
        BtnPCancel:
            width: root.width/2
            pos: root.pos
            on_release: root.dismiss()
        BtnPConfirm:
            text: "Set and restart"
            enabled: len(hostname_input.text) >= 1
            width: root.width/2
            pos: root.center_x, root.y
            on_release: root.confirm()
