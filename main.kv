#:kivy 1.8.0
#:import Factory kivy.factory.Factory
#:import p parameters
#:set tab_height 100
#:set btn_play_size 64
#:set h 1.155*btn_play_size
#:set btn_height 64
#:set home_col_height 133
Tabs:

<Tabs@TabbedPanel>:
    tab_pos: 'bottom_mid'
    tab_width: p.screen_width/3
    tab_height: tab_height
    do_default_tab: False
    HomeTab:
        id: home_tab
    FileTab:
        id: file_tab
    SettingTab:
        id: set_tab

# HOME -------------------------------------------------------------
<HomeTab@TabbedPanelItem>:
    background_down: '' # dadurch nimmt es background color an, sowieso immer mit dessen opacity auch waere es ein bild
    background_normal: 'Logos/Black.png'
    background_color: p.background
    canvas:
        Rectangle:
            source: 'Logos/HomeIcon.png'
            size: 100, 100
            pos: 50, 0
        Color:
            rgba: p.accent if self.state == 'down' else [0, 0, 0, 0]
        Rectangle:
            size: self.width, 4
            pos: self.pos
    FloatLayout:
        Background:
            pos_hint: {'x':0,'y':0}
            size_hint: 1,1
        Label:
            id: l_time_remaining
            text: "2:32h remaining"
            size_hint: None, None
            size: p.screen_width-2*p.padding, p.normal_font
            text_size: self.size
            font_size: p.normal_font
            pos: p.padding, 33 + tab_height
            halign: 'left'
            valign: 'bottom'
        ProgressBar:
            id: progress_bar
            max: 1
            value: 0.3
            size_hint: None, None
            size: p.screen_width-2*p.padding, 5
            pos: p.padding, l_time_remaining.top+14
        Label:
            id: l_filename
            text: "Cube_tesfforprintfinalfinalnew2"
            size_hint: None, None
            size: 300,134
            text_size: self.size
            font_size: p.large_font
            pos: p.padding, progress_bar.top
            shorten: True
            halign: 'left'
            valign: 'middle'
        Btn_Stop:
            id: btn_stop
            size: 118,118
            center_y: l_filename.center_y
            center_x: p.screen_width - btn_play_size/2 -p.padding
        Btn_Play:
            on_release: hs_manager.current = 'printingscreen'
            size: btn_stop.size
            y: btn_stop.y
            right: btn_stop.x
        SI_Divider:
            id: top_divider
            pos: 0, l_filename.top
        HomeScreenManager:
            id: hs_manager
            size_hint: None, None
            size: p.screen_width, p.screen_height-top_divider.top
            pos: root.x, top_divider.top
        Btn_Temp:
            on_release:
                Factory.BasePopup().open()
            large_value: "239°C"
            small_value: "240+0°C"
            red: True
            id: temp_B
            size: 190,100
            x: p.padding-20
            center_y: p.padding+btn_height/2+ top_divider.top
        Btn_Temp:
            large_value: "18°C"
            small_value: "Off"
            id: temp_A
            size: 190,100
            x: p.padding-20
            center_y: p.padding+btn_height + temp_B.center_y
        Btn_Temp:
            large_value: "72°C"
            small_value: "70+0°C"
            red: True
            id: temp_bed
            size: 190,100
            x: p.padding-20
            center_y: p.padding+btn_height+ temp_A.center_y
<HomeScreenManager@ScreenManager>:
    HomeScreen:
    PrintingScreen:
<PrintingScreen@Screen>:
    name: "printingscreen"
    FloatLayout:
        Btn_Temp:
            large_value: "55%"
            small_value: "Print Cooling"
            id: temp_cooling
            size: 190,100
            x: p.padding-20
            center_y: 420
        Btn_Temp:
            large_value: "100%"
            small_value: "Material Flow"
            id: temp_flowrate
            size: 190,100
            x: p.padding-20
            center_y: p.padding+btn_height + temp_cooling.center_y
        Btn_Temp:
            large_value: "100%"
            small_value: "Print Speed"
            id: temp_speed
            size: 190,100
            x: p.padding-20
            center_y: p.padding+btn_height+ temp_flowrate.center_y
<HomeScreen@Screen>:
    name: "homescreen"
    FloatLayout:
        Btn_Arrow:
            dir_right: True
            id: btn_right_B
            size: btn_height, btn_height
            y: 50
            right: p.screen_width-34
        Btn_Arrow:
            dir_right: True
            id: btn_right_A
            size: btn_height, btn_height
            y: btn_right_B.top+p.padding
            x: btn_right_B.x
        Btn_Triple:
            id: btn_tr_B
            y: btn_right_B.y
            right: btn_right_B.x
        Btn_Triple:
            id: btn_tr_A
            y: btn_right_A.y
            right: btn_right_A.x
        Btn_Arrow:
            id: btn_left_B
            size: btn_height, btn_height
            y: btn_right_B.y
            right: btn_tr_B.x
        Btn_Arrow:
            id: btn_left_A
            size: btn_height, btn_height
            y: btn_tr_A.y
            right: btn_tr_A.x
        Btn_Outline:
            id: btn_calibrate
            title: "Mesh Bed Leveling"
            size: btn_tr_B.size
            pos: btn_tr_B.x, btn_tr_A.top +p.padding
        Btn_TripleZ:
            id: btn_tr_Z
            height: xy_field.height
            h1: self.height/3
            h2: self.height/3
            h3: self.height/3
            width: self.height/3
            right: btn_calibrate.right
            top: root.height-p.padding
        XyField:
            id: xy_field
            size_hint: None, None
            size: 280, 260
            point_radius: 10
            x: p.padding
            top: root.height-p.padding
            activated: False

        Label:
            id: xy_display
            size: self.texture_size
            size_hint: None, None
            x: xy_field.x
            y: xy_field.y - self.height
            color: p.divider
            font_size: p.small_font
            text: xy_field.display


<BaseButton>:
    pressed: False
    on_press: self.pressed = True
    on_release: self.pressed = False
    title: ''
    size_hint: None, None
    enabled: True
    canvas.before:
        Color:
            rgba: p.translucent_white if self.pressed else [0,0,0,0]
        RoundedRectangle:
            radius: [p.radius,]
            pos: self.pos
            size: self.size
    Label:
        text: root.title
        size: root.size
        text_size: self.size
        pos: root.pos        
        font_size: p.normal_font
        valign: 'middle'
        halign: 'center'
<Btn_Stop>:
    canvas.before:
        Color:
            rgba: p.red if self.enabled else [0,0,0,0]
        Rectangle:
            pos: self.center_x-btn_play_size/2,self.center_y-btn_play_size/2
            size: btn_play_size,btn_play_size
<Btn_Play>:
    paused: False
    canvas.before:
        Color:
            rgba: 1,1,1,1 if self.enabled and self.paused else 0
        Rectangle:
            pos: self.center_x-btn_play_size/2, self.center_y-btn_play_size/2
            size: 0.4*btn_play_size,btn_play_size
        Rectangle:
            pos: self.center_x+btn_play_size/2-0.4*btn_play_size, self.center_y-btn_play_size/2
            size: 0.4*btn_play_size,btn_play_size
            canvas:
        Color:
            rgba: 1,1,1,1 if self.enabled and not self.paused else 0
        Triangle:
            points: self.center_x-btn_play_size/2, self.center_y- h/2, self.center_x-btn_play_size/2, self.center_y+ h/2, self.center_x+btn_play_size/2, self.center_y
<Btn>:
    title: ''
    canvas.before:
        Color:
            rgba: p.medium_gray
        RoundedRectangle:
            radius: [p.radius,]
            pos: self.pos
            size: self.size
<Btn_Outline>:
    title: ''
    canvas.before:
        Color:
            rgba: p.button_outline
        Line:
            rounded_rectangle: (self.x, self.y, self.width, self.height, p.radius)
            width: 1
<Btn_Arrow>:
    #:set v 48
    #:set w 24
    dir_right: False
    canvas.before:
        Color:
            rgba: p.medium_gray
        Triangle:
            points: [self.x+self.width/2-w/2, self.center_y- v/2, self.x+self.width/2-w/2, self.center_y+ v/2, self.x+self.width/2+w/2, self.center_y] if self.dir_right else [self.x+self.width/2+w/2, self.center_y- v/2, self.x+self.width/2+w/2, self.center_y+ v/2, self.x+self.width/2-w/2, self.center_y]
<Btn_Triple>:
    title1: 'Unload'
    title2: ''
    title3: 'Load'
    w1: 77
    w2: 68
    w3: 68
    size_hint: None, None
    size: self.w1+self.w2+self.w3, btn_height
    canvas:
        Color:
            rgba: p.button
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [p.radius,]
        Color:
            rgba: p.medium_light_gray
        Rectangle:
            pos: self.x+self.w1, self.y+6
            size: 1,self.height-12
        Rectangle:
            pos: self.x+self.w1+1+self.w2, self.y+6
            size: 1,self.height-12
    BaseButton:
        title: root.title1
        size: root.w1, root.height
        pos: root.pos
        canvas.before:
            Clear
            Color:
                rgba: p.translucent_white if self.pressed else [0,0,0,0]
            RoundedRectangle:
                radius: [p.radius, 0,0,p.radius]
                size: self.size
                pos: self.pos
    BaseButton:
        title: root.title2
        size: root.w2, root.height
        pos: root.x + root.w1,root.y
        canvas.before:
            Clear
            Color:
                rgba: p.translucent_white if self.pressed else [0,0,0,0]
            Rectangle:
                size: self.size
                pos: self.pos
    BaseButton:
        title: root.title3
        size: root.w3, root.height
        pos: root.x + root.w1+root.w2,root.y
        canvas.before:
            Clear
            Color:
                rgba: p.translucent_white if self.pressed else [0,0,0,0]
            RoundedRectangle:
                radius: [0,p.radius,p.radius, 0]
                size: self.size
                pos: self.pos
<Btn_TripleZ>:
    h1: 85
    h2: 85
    h3: 85
    size_hint: None, None
    canvas:
        Color:
            rgba: p.button_outline
        Line:
            rounded_rectangle: (self.x, self.y, self.width, self.height, p.radius)
        Color:
            rgba: p.button_outline
        Rectangle:
            pos: self.x+6, self.y+self.h1
            size: self.width-12,1
        Rectangle:
            pos: self.x+6, self.y+self.h1+self.h2
            size: self.width-12,1
        Color: 
            rgba: 1,1,1,1
        #:set t 12
        #:set u 24 #Triangle has this size x2
        Triangle:
            points: self.center_x-u,self.y+self.h1/2+t, self.center_x+u, self.y+self.h1/2+t, self.center_x, self.y+self.h1/2-t
        Triangle:
            points: self.center_x-u,self.top-self.h3/2-t, self.center_x+u, self.top-self.h3/2-t, self.center_x, self.top-self.h3/2+t
        Rectangle:
            source: 'Logos/HomeIcon.png'
            size: 64, 64
            pos: self.center_x-32, self.center_y-32
    BaseButton:
        size: root.width, root.h1
        pos: root.x, root.y
        canvas.before:
            Clear
            Color:
                rgba: p.translucent_white if self.pressed else [0,0,0,0]
            RoundedRectangle:
                radius: [0,0,p.radius,p.radius]
                size: self.size
                pos: self.pos
    BaseButton:
        size: root.width, root.h2
        pos: root.x, root.y+root.h1
        canvas.before:
            Clear
            Color:
                rgba: p.translucent_white if self.pressed else [0,0,0,0]
            Rectangle:
                size: self.size
                pos: self.pos
    BaseButton:
        size: root.width, root.h3
        pos: root.x, root.top-root.h3
        canvas.before:
            Clear
            Color:
                rgba: p.translucent_white if self.pressed else [0,0,0,0]
            RoundedRectangle:
                radius: [p.radius,p.radius,0,0]
                size: self.size
                pos: self.pos       
<Btn_Temp>:
    red: False
    large_value: "--"
    small_value: "--"
    Label:
        padding_x: 15
        color: p.red if root.red else [1,1,1,1]
        text: root.large_value
        size_hint: None, None
        size: root.width, btn_height+16#to compensate for the font being 8px below top when set to 'top'
        text_size: self.size
        center_y: root.center_y
        right: root.right
        font_size: p.large_font
        valign: 'top'
        halign: 'right'
    Label:
        padding_x: 15
        color: p.light_gray
        text: root.small_value
        size_hint: None, None
        size: root.width, btn_height+9
        text_size: self.size
        center_y: root.center_y
        right: root.right
        font_size: p.normal_font
        valign: 'bottom'
        halign: 'right'


<BasePopup>:
    title_size: p.large_font
    title_align: 'center'
    background_color: [0,0,0,0.5] #reduces background darkening from 0.7
    size_hint: 0.67, 0.3
    pos_hint: {'center_y': 0.55}
<P_Single@BasePopup>:
    l_cancel: 'Cancel'
    canvas:
        Color:
            rgba: p.divider
        Rectangle:
            pos: self.x, self.top
            size: self.width, 1
    FloatLayout:
        BaseButton:
            on_release:
                root.dismiss()
            title: root.l_cancel
            pos: root.pos
            size: root.width/2, root.width
            canvas:
                Color:# Highlight pressed button
                    rgba: 0.4,0.4,0.4,1 if self.pressed else [0,0,0,0]    
                RoundedRectangle:
                    radius: [0,0,p.popup_radius, p.popup_radius]
                    pos: self.pos
                    size: self.size

<P_Normal@BasePopup>:
    l_cancel: 'Cancel'
    l_confirm: 'Confirm'
    canvas:
        Color:
            rgba: p.divider
        Rectangle:
            pos: self.x+ self.width/2, self.y
            size: 1,self.height
        Rectangle:
            pos: self.x, self.top
            size: self.width, 1
    FloatLayout:
        pos: root.pos
        pos_hint: None, None
        BaseButton:
            on_release:
                root.dismiss()
            title: root.l_cancel
            pos: root.pos
            size: root.width/2, root.width
            canvas:
                Clear
                Color:
                    rgba: p.translucent_white if self.pressed else [0,0,0,0]
                RoundedRectangle:
                    radius: [0,0,0,p.popup_radius]
                    pos: self.pos
                    size: self.size
        BaseButton:
            on_release:
                root.confirm()
            title: root.l_confirm
            pos: root.center_x, root.x
            size: root.width/2, root.width
            canvas:
                Clear
                Color:
                    rgba: p.translucent_white if self.pressed else [0,0,0,0]
                RoundedRectangle:
                    radius: [0,0,p.popup_radius,0]
                    pos: self.pos
                    size: self.size
# FILE -------------------------------------------------------------
<FileTab@TabbedPanelItem>:
    background_down: ''
    background_normal: 'Logos/Black.png'
    background_color: p.background
    canvas:
        Rectangle:
            source: 'Logos/FilesIcon.png'
            size: 100,100
            pos: 250, 0
        Color:
            rgba: p.accent if self.state == 'down' else [0, 0, 0, 0]
        Rectangle:
            size: self.width, 4
            pos: self.pos
    FC:
<FC>:
    filters: '*.gco', '*.gcode'
    rootpath: '/'
    id: fc
    multiselect: False
    canvas.before:         
        Color:
            rgba: p.background
        Rectangle:
            pos: 0,0
            size: p.screen_width, 924

<PrintPopup>:
    title: 'Print now'
    title_size: p.large_font
    size_hint: 0.8, 0.3
    
    FloatLayout:
        Label:
            text: root.prompt
            markup: True
            font_size: p.small_font
            text_size: root.width * 0.9, None
            size: self.texture_size
            size_hint: None, None
            pos_hint: {'x': 0.05, 'top': 0.85}

        
        Button:
            id: btn_cancel
            text: 'Cancel'
            size_hint: 0.3, 0.3
            pos_hint: {'x': 0.25, 'y': 0.1}
            on_release: root.dismiss()
        Button:
            text: 'Start'
            size_hint: btn_cancel.size_hint
            pos_hint: {'x': 0.6, 'y': 0.1}
            on_release: root.confirm()




# SETTING ----------------------------------------------------------
<SettingTab@TabbedPanelItem>:
    background_down: '' 
    background_normal: 'Logos/Black.png'
    background_color: p.background
    canvas:
        Rectangle:
            source: 'Logos/SettingsIcon.png'
            size: 100, 100
            pos: 450, 0
        Color:
            rgba: p.accent if self.state == 'down' else [0, 0, 0, 0]
        Rectangle:
            size: self.width, 4
            pos: self.pos


    ScreenManager:
        name: 'SettingScreenManager'
        SettingScreen:
        WifiScreen:
        
<SettingScreen@Screen>:
    name: 'SettingScreen'
    ScrollView:
        canvas.before:
            Color:
                rgba: p.background
            Rectangle:
                pos: self.pos
                size: self.size
        BoxLayout:
            canvas:
                Color:
                    rgba: p.background #set Background colour for settings
                Rectangle:
                    size: self.size
                    pos: self.pos
            orientation:'vertical'
            height: self.minimum_height
            pos: 0, root.height - self.height
            size_hint_y: None

            SI_Switch:
                title: "Light"
            SI_Switch:
                title: "Calibrate for every printjob"
            SI_ValueSlider:
                title: "Max. printhead Acceleration" 
                value: '777'
                Button:
                    pos_hint: {'x':0, 'y':0}
                    background_normal: 'Logos/Transparent.png'
                    background_down: ''
                    background_color: p.translucent_white
                    on_release: Factory.ValuePopup().open()
            SI_Wifi:
                title: "Wifi"
                Button:
                    pos_hint: {'x':0, 'y':0}
                    background_normal: 'Logos/Transparent.png'
                    background_down: ''
                    background_color: 0, 0, 0, 0
                    on_press:
                        root.manager.transition.direction = 'left'
                        root.manager.current = 'WifiScreen'
            SI_PowerMenu:
                title: "Shutdown..."

<WifiScreen>:
    name: 'WifiScreen'
    BoxLayout:
        canvas:
            Color:
                rgba: p.background
            Rectangle:
                size: self.size
                pos: self.pos
        orientation:'vertical'
        size_hint: 1, 1
        
        SetItem:
            id: wifi_back
            Button:
                canvas:
                    Rectangle:
                        source: 'Logos/BackButton.png'
                        size: 70, 70
                        pos: 30, self.y+20
                background_normal: 'Logos/Transparent.png'
                background_down: ''
                background_color: p.translucent_white
                pos_hint: {'x':0, 'y': 0}
                size_hint_x: None
                width: 110
                on_press:
                    root.manager.transition.direction = 'right'
                    root.manager.current = 'SettingScreen'
            Label:
                text: "Wifi"
                font_size: p.large_font
                text_size: self.size
                size_hint: 1, 1
                pos_hint: {'x': 0, 'y': 0}
                valign: 'middle'
                halign: 'center'
        ScrollView:
            do_scroll_x: False
            canvas.before:
                Color:
                    rgba: p.background
                Rectangle:
                    pos: self.pos
                    size: self.size
            BoxLayout:
                canvas:
                    Color:
                        rgba: p.background
                    Rectangle:
                        pos: self.pos
                        size: self.size
                id: wifi_box
                orientation: 'vertical'
                height: self.minimum_height
                size_hint_y: None
                
            
<SetItem>:
    size_hint_y: None
    height: 110
    width: p.screen_width
    title: ''
    Label:
        id: switch_id
        text: root.title
        font_size: p.normal_font
        text_size: self.size
        size: root.size
        valign: 'middle'
        pos: root.pos
        padding_x: p.padding
    SI_Divider:
        pos_hint: {'x': 0, 'y': 0}

<SI_Divider@Widget>:
    size_hint_y: None
    height: 1
    width: p.screen_width
    canvas:
        Color:
            rgba: p.divider
        Rectangle:
            pos: self.x+15, self.y
            size: self.width -30, 1

<SI_Switch@SetItem>:
    Switch:
        id: knopf
        size_hint: None, None
        pos_hint: {'center_y': 0.5}
        right: p.screen_width-p.padding

<SI_ValueSlider>:
    value: ''
    Label:
        id: value
        text: root.value
        font_size: p.normal_font
        text_size: self.size
        color: p.light_gray
        size: 200, root.height
        size_hint: None, None
        valign: 'middle'
        halign: 'right'
        y: root.y
        right: p.screen_width
        padding_x: p.padding

<SI_Wifi>:
    Label:
        id: current_wifi
        text: '[current]'
        font_size: p.normal_font        
        text_size: self.size
        color: p.light_gray
        size: 200, root.height
        size_hint: None, None
        valign: 'middle'
        halign: 'right'
        y: root.y
        right: p.screen_width
        padding_x: p.padding




<SI_WifiNetwork>:
    Label:
        text: root.ssid
        font_size: p.normal_font
        text_size: self.size
        color: p.light_gray
        size: 200, root.height
        size_hint: None, None
        valign: 'middle'
        halign: 'right'
        y: root.y
        right: p.screen_width
        padding_x: p.padding

<ValuePopup@Popup>:
    auto_dismiss: True  
    size_hint: 0.8,0.5
    background: 'Logos/Transparent.png'

    canvas:
        Color:
            rgba: p.medium_light_gray
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [p.radius]
                
    


<PasswordPopup>:
    title_size: p.large_font
    title_align: 'center'
    background_color: 0,0,0,0.4 #reduces background darkening from 0.7
    size_hint: 0.67, 0.3
    pos_hint: {'center_y': 0.6}
    txt_input: pwd_input

    
    FloatLayout:
        Label:
            text: 'Password'
            font_size: p.normal_font
            size: self.texture_size
            size_hint: None, None
            pos_hint: {'x': 0.1, 'y': 0.75}
        TextInput:
            id: pwd_input
            multiline: False
            password: True
            height: self.minimum_height
            size_hint: 0.7, None
            pos_hint: {'x': 0.1, 'top': 0.73}
        ToggleButton:
            text: 'show'
            on_press: 
                if self.state == 'down': pwd_input.password = False
                elif self.state == 'normal': pwd_input.password = True
            on_release:
                pwd_input.focus = True
            height: pwd_input.height
            size_hint: 0.1, None
            pos_hint: {'x': 0.8, 'top': 0.73}
        Button:
            id: btn_cancel
            text: 'Cancel'
            size_hint: 0.2, 0.2
            pos_hint: {'x': 0.48, 'y': 0.1}
            on_release: root.dismiss()
        Button:
            text: 'Confirm'
            size_hint: btn_cancel.size_hint
            pos_hint: {'x': 0.7, 'y': 0.1}
            on_release: root.connect()

<PowerPopup>:
    title: "Shutdown"
    title_size: p.large_font
    size_hint: 0.8, 0.5
    
    FloatLayout:
        Button:
            id: btn_poweroff
            text: "Shutdown"
            size_hint: 0.25, None
            height: self.width
            pos_hint: {'x': 0.2, 'y': 0.5}
            on_release: root.poweroff()
        Button:
            id: btn_reboot
            text: "Reboot"
            size_hint: btn_poweroff.size_hint
            height: btn_poweroff.height
            pos_hint: {'x': 0.55, 'y': 0.5}
            on_release: root.reboot()
        Button:
            id: btn_cancel
            text: "Cancel"
            size_hint: 0.2, 0.1
            pos_hint: {'x': 0.7, 'y': 0.1}
            on_release: root.dismiss()                  
   
<Background@Widget>:
    canvas.before:
        Color:
            rgba: p.background
        Rectangle:
            pos: self.pos
            size: self.size
        
<TabbedPanelStrip>:
    canvas:
        Color:
            rgba: (0, 0, 0, 1) # black colour of the strip behind all 3 tab buttons
        Rectangle:
            size: self.size
            pos: self.pos

<StripLayout>: #a child of Gridlayout which is used by tabbedpanel, this disables padding
    padding: [0,0,0,0]

