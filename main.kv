#:kivy 1.8.0
#:import Factory kivy.factory.Factory
#:import p parameters

Tabs:

<Tabs@TabbedPanel>:
    tab_pos: 'bottom_mid'
    tab_width: p.screen_width/3
    tab_height: 100
    do_default_tab: False
    HomeTab:
    FileTab:
    SettingTab:
        id: set_tab

# HOME -------------------------------------------------------------
<HomeTab@TabbedPanelItem>:
    background_down: '' # dadurch nimmt es background color an, sowieso immer mit dessen opacity auch waere es ein bild
    background_normal: 'Logos/Black.png'
    background_color: p.background
    canvas:
        Rectangle:
            source: 'Logos/HomeIcon.png'
            size: 100, 100
            pos: 50, 0
    FloatLayout:
        Background:
            pos_hint: {'x':0,'y':0}
            size_hint: 1,1

        HomeScreenManager:
            pos_hint: {'x':0,'y':0}
            size_hint: 1,1
        SI_Divider:
            pos_hint: {'x':0,'y':0.1}




<HomeScreenManager@ScreenManager>:
    HomeScreen:
    PrintingScreen:

<HomeScreen@Screen>:
    name: "homescreen"
    FloatLayout:
        Btn_Double:

            size: 240,66
            pos: 10,110
        Btn_Triple:
            title1: 'Unload'
            title2: 'ABS'
            title3: 'Load'
            height: 66
            w1: 90
            w2: 70
            w3: 90
            pos: 90,200
        Btn:

            size: 240,66
            pos: 10,10





<PrintingScreen@Screen>:
    name: "printingscreen"
    Label:
        id:l
        text: "PrintingScreen"
<Btn_Double>:
    title1: ''
    title2: ''
    pressed1: False
    pressed2: False
    size_hint: None,None
    canvas:
        Color:
            rgba: p.medium_gray
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [p.radius,]
        Color:
            rgba: p.medium_light_gray
        Rectangle:
            pos: self.x+ self.width/2, self.y+6
            size: 1,self.height-12
        Color:# Highlight pressed button
            rgba: 0.4,0.4,0.4,1 if self.pressed1 else 0        
        RoundedRectangle:
            radius: [p.radius,0,0,p.radius]
            pos: self.x, self.y
            size: self.width/2+1, self.height
        Color:
            rgba: 0.4,0.4,0.4,1 if self.pressed2 else 0
        RoundedRectangle:
            radius: [0,p.radius,p.radius,0]
            pos: self.x+self.width/2, self.y
            size: self.width/2+1, self.height
    Label:
        text: root.title1
        size: root.width/2, root.height
        text_size: self.size
        pos: root.pos        
        font_size: p.normal_font
        valign: 'middle'
        halign: 'center'
    Label:
        text: root.title2
        size: root.width/2, root.height
        text_size: self.size
        pos: root.x+root.width/2, root.y        
        font_size: p.normal_font
        valign: 'middle'
        halign: 'center' 
<Btn_Triple>:
    title1: ''
    title2: ''
    title3: ''
    w1: 50
    w2: 50
    w3: 50
    pressed1: False
    pressed2: False
    pressed3: False
    size_hint: None, None
    width: self.w1+self.w2+self.w3+2
    canvas:
        Color:
            rgba: p.medium_gray
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [p.radius,]
        Color:
            rgba: p.medium_light_gray
        Rectangle:
            pos: self.x+self.w1, self.y+6
            size: 1,self.height-12
        Rectangle:
            pos: self.x+self.w1+1+self.w2, self.y+6
            size: 1,self.height-12
        Color:# Highlight pressed button
            rgba: 0.4,0.4,0.4,1 if self.pressed1 else 0
        RoundedRectangle:
            radius: [p.radius,0,0,p.radius]
            pos: self.x, self.y
            size: self.w1+1, self.height
        Color:
            rgba: 0.4,0.4,0.4,1 if self.pressed2 else 0
        Rectangle:
            pos: self.x+self.w1, self.y
            size: self.w2+2,self.height
        Color:
            rgba: 0.4,0.4,0.4,1 if self.pressed3 else 0
        RoundedRectangle:
            radius: [0,p.radius,p.radius,0]
            pos: self.x+self.w1+1+self.w2, self.y
            size: self.w3+1, self.height
    Label:
        text: root.title1
        size: root.w1, root.height
        text_size: self.size
        pos: root.pos        
        font_size: p.normal_font
        valign: 'middle'
        halign: 'center'
    Label:
        text: root.title2
        size: root.w2, root.height
        text_size: self.size
        pos: root.x+root.w1, root.y        
        font_size: p.normal_font
        valign: 'middle'
        halign: 'center'
    Label:
        text: root.title3
        size: root.w3, root.height
        text_size: self.size
        pos: root.x+root.w1+root.w2, root.y        
        font_size: p.normal_font
        valign: 'middle'
        halign: 'center'
#@Widget
<ClearButton>:
    size_hint: None, None
    pressed: False
    enabled: True
    canvas:
        Color:
            rgba: 1,1,1,0.1 if self.pressed else 0
        RoundedRectangle:
            radius: [p.radius,]
            pos: self.pos
            size: self.size
#@ClearButton
<Btn>:
    title: ''
    canvas.before:
        Color:
            rgba: p.medium_gray
        RoundedRectangle:
            radius: [p.radius,]
            pos: self.pos
            size: self.size
    Label:
        text: root.title
        pos: root.pos
        size: root.size
        text_size: self.size     
        font_size: p.normal_font
        valign: 'middle'
        halign: 'center'
        
<Btn_Stop@ClearButton>:
    canvas.before:
        Color:
            rgba: p.red if self.enabled else 0
        Rectangle:
            pos: self.center_x-33, self.center_y-33
            size: 66,66
<Btn_Play@ClearButton>:
#:set s 66
#:set h 1.155*s
    paused: False
    canvas.before:
        Color:
            rgba: 1,1,1,1 if self.enabled and self.paused else 0
        Rectangle:
            pos: self.center_x-s/2, self.center_y-s/2
            size: 0.4*s,s
        Rectangle:
            pos: self.center_x+s/2-0.4*s, self.center_y-s/2
            size: 0.4*s,s
            canvas:
        Color:
            rgba: 1,1,1,1 if self.enabled and not self.paused else 0
        Triangle:
            points: self.center_x-s/2, self.center_y- h/2, self.center_x-s/2, self.center_y+ h/2, self.center_x+s/2, self.center_y
# FILE -------------------------------------------------------------
<FileTab@TabbedPanelItem>:
    background_down: ''
    background_normal: 'Logos/Black.png'
    background_color: p.background

    canvas:
        Rectangle:
            source: 'Logos/FilesIcon.png'
            size: 100,100
            pos: 250, 0
    FC:
<FC>:
    filters: '*.gco', '*.gcode'
    rootpath: '/'
    id: fc
    multiselect: 'False'
    canvas.before:         
        Color:
            rgba: p.background
        Rectangle:
            pos: 0,0
            size: p.screen_width, 924




# SETTING ----------------------------------------------------------
<SettingTab@TabbedPanelItem>:
    background_down: '' 
    background_normal: 'Logos/Black.png'
    background_color: p.background
    canvas:
        Rectangle:
            source: 'Logos/SettingsIcon.png'
            size: 100, 100
            pos: 450, 0

    ScreenManager:
        name: 'SettingScreenManager'
        SettingScreen:
        WifiScreen:
        
<SettingScreen@Screen>:
    name: 'SettingScreen'
    ScrollView:
        canvas.before:
            Color:
                rgba: p.background
            Rectangle:
                pos: self.pos
                size: self.size
        BoxLayout:
            canvas:
                Color:
                    rgba: p.background #set Background colour for settings
                Rectangle:
                    size: self.size
                    pos: self.pos
            orientation:'vertical'
            height: self.minimum_height
            pos: 0, root.height - self.height
            size_hint_y: None

            SI_Switch:
                title: "Light"
            SI_Switch:
                title: "Calibrate for every printjob"
            SI_Wifi:
                title: "Wifi"
                Button:
                    pos_hint: {'x':0, 'y':0}
                    background_normal: 'Logos/Transparent.png'
                    background_down: ''
                    background_color: p.translucent_white
                    on_press:
                        root.manager.transition.direction = 'left'
                        root.manager.current = 'WifiScreen'
            SI_ValueSlider:
                title: "Max. printhead Acceleration" 
                value: '777'
                Button:
                    pos_hint: {'x':0, 'y':0}
                    background_normal: 'Logos/Transparent.png'
                    background_down: ''
                    background_color: p.translucent_white
                    on_release: Factory.ValuePopup().open()

<WifiScreen>:
    name: 'WifiScreen'
    BoxLayout:
        canvas:
            Color:
                rgba: p.background
            Rectangle:
                size: self.size
                pos: self.pos
        orientation:'vertical'
        size_hint: 1, 1
        
        SetItem:
            id: wifi_back
            Button:
                canvas:
                    Rectangle:
                        source: 'Logos/BackButton.png'
                        size: 70, 70
                        pos: 30, self.y+20
                background_normal: 'Logos/Transparent.png'
                background_down: ''
                background_color: p.translucent_white
                pos_hint: {'x':0, 'y': 0}
                size_hint_x: None
                width: 110
                on_press:
                    root.manager.transition.direction = 'right'
                    root.manager.current = 'SettingScreen'
            Label:
                text: "Wifi"
                font_size: p.large_font
                text_size: self.size
                size_hint: 1, 1
                pos_hint: {'x': 0, 'y': 0}
                valign: 'middle'
                halign: 'center'
        ScrollView:
            do_scroll_x: False
            canvas.before:
                Color:
                    rgba: p.background
                Rectangle:
                    pos: self.pos
                    size: self.size
            BoxLayout:
                canvas:
                    Color:
                        rgba: p.background
                    Rectangle:
                        pos: self.pos
                        size: self.size
                id: wifi_box
                orientation: 'vertical'
                height: self.minimum_height
                size_hint_y: None
                
            
<SetItem>:
    size_hint_y: None
    height: 110
    width: p.screen_width
    title: ''
    Label:
        id: switch_id
        text: root.title
        font_size: p.normal_font
        text_size: self.size
        size: root.size
        valign: 'middle'
        pos: root.pos
        padding_x: p.side_padding
    SI_Divider:
        pos_hint: {'x': 0, 'y': 0}

<SI_Divider@Widget>:
    size_hint_y: None
    height: 1
    width: p.screen_width
    canvas:
        Color:
            rgba: p.medium_gray
        Rectangle:
            pos: self.x+15, self.y
            size: self.width -30, 1

<SI_Switch@SetItem>:
    Switch:
        id: knopf
        size_hint: None, None
        pos_hint: {'center_y': 0.5}
        right: p.screen_width-p.side_padding

<SI_ValueSlider@SetItem>:
    value: ''
    Label:
        id: value
        text: root.value
        font_size: p.normal_font
        text_size: self.size
        color: p.light_gray
        size: 200, root.height
        size_hint: None, None
        valign: 'middle'
        halign: 'right'
        y: root.y
        right: p.screen_width
        padding_x: p.side_padding

<SI_Wifi>:
    Label:
        id: current_wifi
        text: '[current]'
        font_size: p.normal_font        
        text_size: self.size
        color: p.light_gray
        size: 200, root.height
        size_hint: None, None
        valign: 'middle'
        halign: 'right'
        y: root.y
        right: p.screen_width
        padding_x: p.side_padding




<SI_WifiNetwork>:
    Label:
        text: root.ssid
        font_size: p.normal_font
        text_size: self.size
        color: p.light_gray
        size: 200, root.height
        size_hint: None, None
        valign: 'middle'
        halign: 'right'
        y: root.y
        right: p.screen_width
        padding_x: p.side_padding

<ValuePopup@Popup>:
    auto_dismiss: False    
    size_hint: 0.8,0.5
    background: 'Logos/Transparent.png'

    canvas:
        Color:
            rgba: p.medium_light_gray
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [p.radius]
                
    


<PasswordPopup>:
    title_size: p.large_font
    size_hint: 0.8, 0.5
    txt_input: pwd_input
  
                
    
    FloatLayout:
        Label:
            text: 'Password'
            font_size: p.normal_font
            size: self.texture_size
            size_hint: None, None
            pos_hint: {'x': 0.1, 'y': 0.75}
        TextInput:
            id: pwd_input
            multiline: False
            focus: True
            password: True
            height: self.minimum_height
            size_hint: 0.7, None
            pos_hint: {'x': 0.1, 'top': 0.73}
        ToggleButton:
            text: 'show'
            on_press: 
                if self.state == 'down': pwd_input.password = False
                elif self.state == 'normal': pwd_input.password = True
            height: pwd_input.height
            size_hint: 0.1, None
            pos_hint: {'x': 0.8, 'top': 0.73}
        Button:
            id: btn_cancel
            text: 'Cancel'
            size_hint: 0.2, 0.1
            pos_hint: {'x': 0.48, 'y': 0.1}
            on_release: root.dismiss()
        Button:
            text: 'Confirm'
            size_hint: btn_cancel.size_hint
            pos_hint: {'x': 0.7, 'y': 0.1}
            on_release: root.connect()
   
<Background@Widget>:
    canvas.before:
        Color:
            rgba: p.background
        Rectangle:
            pos: self.pos
            size: self.size
        
<TabbedPanelStrip>:
    canvas:
        Color:
            rgba: (0, 0, 0, 1) # black colour of the strip behind all 3 tab buttons
        Rectangle:
            size: self.size
            pos: self.pos

<StripLayout>: #a child of Gridlayout which is used by tabbedpanel, this disables padding
    padding: [0,0,0,0]


    
